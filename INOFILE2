#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266HTTPClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>
#include <SPI.h>
  
char ssid[] = "AKGS";
char pass[] = "akgsanil";
char server[]="192.168.43.177";


const int trigger = 5;
const int echo = 4;
long T;
float distanceCM;
float d;
WiFiClient  client;

void setup()
{
  Serial.begin(115200);
  pinMode(trigger, OUTPUT);
  pinMode(echo, INPUT);
  WiFi.mode(WIFI_STA);
  if (WiFi.status() != WL_CONNECTED)
  {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    while (WiFi.status() != WL_CONNECTED)
    {
      WiFi.begin(ssid, pass);
      Serial.print(".");
      delay(5000);
    }
    Serial.println("\n wifiConnected.");
    Serial.println("Server started");
    Serial.print(WiFi.localIP());
    delay(1000);
    Serial.println("Connecting..");
  }
}
void loop()
{
  digitalWrite(trigger, LOW);
  delay(1);
  digitalWrite(trigger, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigger, LOW);
  T = pulseIn(echo, HIGH);
  distanceCM = T * 0.034;
  distanceCM = distanceCM / 2;
  d=distanceCM;
  Serial.print("Distance in cm: ");
  Serial.println(distanceCM);
  sending_to_phpmyadmin();
  delay(1000);
}

void sending_to_phpmyadmin()
{
      if (client.connect(server, 80)) {
    Serial.println("connected");
    // Make a HTTP request:
    Serial.print("GET /hc2.php?distance=");
    client.print("GET /hc2.php?distance=");     //YOUR URL
    Serial.println(d);
    client.print(d);
    client.print(" ");      //SPACE BEFORE HTTP/1.1
    client.print("HTTP/1.1");
    client.println();
    client.println("Host: 192.168.43.177");
    client.println("Connection: close");
    client.println();
  } else {
    // if you didn't get a connection to the server:
    Serial.println("connection failed");
  }

}
